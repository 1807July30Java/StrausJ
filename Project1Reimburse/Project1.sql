--************************ Create Tables *****************************
CREATE TABLE EMPLOYEE (
  EMPLOYEE_ID INTEGER PRIMARY KEY,
  F_NAME VARCHAR2(100) NOT NULL,
  L_NAME VARCHAR2(100) NOT NULL,
  USERNAME VARCHAR2(100) NOT NULL UNIQUE,
  PASSWORD VARCHAR2(100) NOT NULL,
  EMAIL VARCHAR2(100) NOT NULL check (
    regexp_like(email, '[[:alnum:]]+@[[:alnum:]]+\.[[:alnum:]]')
  ),
  MANAGED_BY INTEGER,
  IS_MANAGER NUMBER(1, 0) DEFAULT 0 NOT NULL
);
/
CREATE TABLE REQUEST (
  REQUEST_ID INTEGER PRIMARY KEY,
  EMPLOYEE_ID INTEGER NOT NULL,
  STATUS NUMBER(1, 0) DEFAULT 0 NOT NULL,
  DESCRIPTION VARCHAR2(300)
);
/
--************************ Create Constraints ************************
ALTER TABLE EMPLOYEE
ADD CONSTRAINT FK_EMPLOYEE_MANAGER
FOREIGN KEY (EMPLOYEE_ID) REFERENCES EMPLOYEE(EMPLOYEE_ID);
/
ALTER TABLE REQUEST
ADD CONSTRAINT FK_REQUEST_EMPLOYEE
FOREIGN KEY (EMPLOYEE_ID) REFERENCES EMPLOYEE(EMPLOYEE_ID)
ON DELETE CASCADE;
/
--************************ Create Sequences & Triggers ***************
CREATE SEQUENCE SQ_EMPLOYEE_ID
  START WITH 1
  INCREMENT BY 1;
/
CREATE SEQUENCE SQ_REQUEST_ID
  START WITH 1
  INCREMENT BY 1;
/
--Triggers
CREATE OR REPLACE TRIGGER TR_INSERT_EMPLOYEE
  BEFORE INSERT ON EMPLOYEE
  FOR EACH ROW 
  BEGIN 
    SELECT SQ_EMPLOYEE_ID.nextval INTO :NEW.EMPLOYEE_ID FROM DUAL;
  end;
/
CREATE OR REPLACE TRIGGER TR_INSERT_REQUEST
  BEFORE INSERT ON REQUEST
  FOR EACH ROW 
  BEGIN 
    SELECT SQ_REQUEST_ID.nextval INTO :NEW.REQUEST_ID FROM DUAL;
  end;
/